document.querySelector('mutation-test-report-app').report = {"files":{"C:\\projects\\GitHub\\LayZeeDK\\ngx-stryker-robobar\\src\\app\\app-routing.module.ts":{"language":"typescript","mutants":[{"id":"0","location":{"end":{"column":2,"line":25},"start":{"column":24,"line":4}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"NoCoverage"},{"id":"1","location":{"end":{"column":4,"line":12},"start":{"column":3,"line":5}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"2","location":{"end":{"column":13,"line":6},"start":{"column":11,"line":6}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"NoCoverage"},{"id":"3","location":{"end":{"column":22,"line":7},"start":{"column":16,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"4","location":{"end":{"column":8,"line":11},"start":{"column":19,"line":8}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"CompileError","description":"Error message: src/app/app-routing.module.ts(8,19): error TS2322: Type '() => undefined' is not assignable to type 'string | LoadChildrenCallback | undefined'.\r\n  Type '() => undefined' is not assignable to type 'LoadChildrenCallback'.\r\n    Type 'undefined' is not assignable to type 'Type<any> | NgModuleFactory<any> | Observable<Type<any>> | Promise<any>'.\r\n"},{"id":"5","location":{"end":{"column":48,"line":9},"start":{"column":14,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"CompileError","description":"Error message: src/app/app-routing.module.ts(9,14): error TS2307: Cannot find module '' or its corresponding type declarations.\r\n"},{"id":"6","location":{"end":{"column":46,"line":10},"start":{"column":9,"line":10}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"NoCoverage"},{"id":"7","location":{"end":{"column":4,"line":19},"start":{"column":3,"line":13}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"8","location":{"end":{"column":19,"line":14},"start":{"column":11,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"9","location":{"end":{"column":8,"line":18},"start":{"column":19,"line":15}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"CompileError","description":"Error message: src/app/app-routing.module.ts(15,19): error TS2322: Type '() => undefined' is not assignable to type 'string | LoadChildrenCallback | undefined'.\r\n  Type '() => undefined' is not assignable to type 'LoadChildrenCallback'.\r\n    Type 'undefined' is not assignable to type 'Type<any> | NgModuleFactory<any> | Observable<Type<any>> | Promise<any>'.\r\n"},{"id":"10","location":{"end":{"column":50,"line":16},"start":{"column":14,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"CompileError","description":"Error message: src/app/app-routing.module.ts(16,14): error TS2307: Cannot find module '' or its corresponding type declarations.\r\n"},{"id":"11","location":{"end":{"column":47,"line":17},"start":{"column":9,"line":17}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"NoCoverage"},{"id":"12","location":{"end":{"column":105,"line":20},"start":{"column":3,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"13","location":{"end":{"column":20,"line":20},"start":{"column":11,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"14","location":{"end":{"column":103,"line":20},"start":{"column":36,"line":20}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"CompileError","description":"Error message: src/app/app-routing.module.ts(20,36): error TS2322: Type '() => undefined' is not assignable to type 'string | LoadChildrenCallback | undefined'.\r\n  Type '() => undefined' is not assignable to type 'LoadChildrenCallback'.\r\n    Type 'undefined' is not assignable to type 'Type<any> | NgModuleFactory<any> | Observable<Type<any>> | Promise<any>'.\r\n"},{"id":"15","location":{"end":{"column":75,"line":20},"start":{"column":49,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"CompileError","description":"Error message: src/app/app-routing.module.ts(20,49): error TS2307: Cannot find module '' or its corresponding type declarations.\r\n"},{"id":"16","location":{"end":{"column":102,"line":20},"start":{"column":82,"line":20}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"NoCoverage"},{"id":"17","location":{"end":{"column":4,"line":24},"start":{"column":3,"line":21}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"18","location":{"end":{"column":15,"line":22},"start":{"column":11,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"19","location":{"end":{"column":20,"line":23},"start":{"column":17,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"}],"source":"import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    loadChildren: () =>\n      import('./place-order/place-order.module').then(\n        esModule => esModule.PlaceOrderModule,\n      ),\n  },\n  {\n    path: 'review',\n    loadChildren: () =>\n      import('./review-order/review-order.module').then(\n        esModule => esModule.ReviewOrderModule,\n      ),\n  },\n  { path: 'success', loadChildren: () => import('./success/success.module').then(m => m.SuccessModule) },\n  {\n    path: '**',\n    redirectTo: '/',\n  },\n];\n\n@NgModule({\n  exports: [RouterModule],\n  imports: [RouterModule.forRoot(routes)],\n})\nexport class AppRoutingModule {}\n"},"C:\\projects\\GitHub\\LayZeeDK\\ngx-stryker-robobar\\src\\app\\data-access\\drink.service.ts":{"language":"typescript","mutants":[{"id":"20","location":{"end":{"column":4,"line":15},"start":{"column":33,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"CompileError","description":"Error message: src/app/data-access/drink.service.ts(9,16): error TS2355: A function whose declared type is neither 'void' nor 'any' must return a value.\r\n"},{"id":"22","location":{"end":{"column":72,"line":11},"start":{"column":7,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"CompileError","description":"Error message: src/app/data-access/drink.service.ts(11,7): error TS2739: Type '{}' is missing the following properties from type 'Drink': amount, isAlcoholic, name, price\r\n"},{"id":"21","location":{"end":{"column":6,"line":14},"start":{"column":12,"line":10}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed","description":"Killed by: PlaceOrderComponent should have 3 drinks"},{"id":"25","location":{"end":{"column":70,"line":12},"start":{"column":7,"line":12}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"CompileError","description":"Error message: src/app/data-access/drink.service.ts(12,7): error TS2739: Type '{}' is missing the following properties from type 'Drink': amount, isAlcoholic, name, price\r\n"},{"id":"23","location":{"end":{"column":26,"line":11},"start":{"column":15,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"24","location":{"end":{"column":70,"line":11},"start":{"column":65,"line":11}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"28","location":{"end":{"column":70,"line":13},"start":{"column":7,"line":13}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"CompileError","description":"Error message: src/app/data-access/drink.service.ts(13,7): error TS2739: Type '{}' is missing the following properties from type 'Drink': amount, isAlcoholic, name, price\r\n"},{"id":"26","location":{"end":{"column":26,"line":12},"start":{"column":15,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"27","location":{"end":{"column":68,"line":12},"start":{"column":64,"line":12}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"29","location":{"end":{"column":26,"line":13},"start":{"column":15,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"30","location":{"end":{"column":68,"line":13},"start":{"column":64,"line":13}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"}],"source":"import { Injectable } from '@angular/core';\n\nimport { Drink } from '../domain/drink';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DrinkService {\n  getDrinks(): readonly Drink[] {\n    return [\n      { name: 'Roba Cola', price: 1.25, amount: 0, isAlcoholic: false },\n      { name: 'Robo Beer', price: 2.0, amount: 0, isAlcoholic: true },\n      { name: 'Rob(w)ine', price: 3.0, amount: 0, isAlcoholic: true },\n    ];\n  }\n}\n"},"C:\\projects\\GitHub\\LayZeeDK\\ngx-stryker-robobar\\src\\app\\data-access\\order.service.ts":{"language":"typescript","mutants":[{"id":"31","location":{"end":{"column":4,"line":20},"start":{"column":47,"line":13}},"mutatorName":"BlockStatement","replacement":"{}","status":"CompileError","description":"Error message: src/app/data-access/order.service.ts(13,7): error TS2378: A 'get' accessor must return a value.\r\nsrc/app/data-access/order.service.ts(13,23): error TS2355: A function whose declared type is neither 'void' nor 'any' must return a value.\r\n"},{"id":"32","location":{"end":{"column":68,"line":14},"start":{"column":9,"line":14}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed","description":"Killed by: SuccessComponent should be constructed"},{"id":"33","location":{"end":{"column":68,"line":14},"start":{"column":9,"line":14}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed","description":"Killed by: OrderService should retrieve from localStorage if local copy does not exist"},{"id":"34","location":{"end":{"column":68,"line":14},"start":{"column":9,"line":14}},"mutatorName":"LogicalOperator","replacement":"!this._currentOrder || this.storage.getItem('currentOrder')","status":"Killed","description":"Killed by: SuccessComponent should be constructed"},{"id":"35","location":{"end":{"column":28,"line":14},"start":{"column":9,"line":14}},"mutatorName":"BooleanLiteral","replacement":"this._currentOrder","status":"Killed","description":"Killed by: OrderService should retrieve from localStorage if local copy does not exist"},{"id":"39","location":{"end":{"column":62,"line":16},"start":{"column":60,"line":16}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"NoCoverage"},{"id":"36","location":{"end":{"column":67,"line":14},"start":{"column":53,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: OrderService should retrieve from localStorage if local copy does not exist"},{"id":"37","location":{"end":{"column":6,"line":17},"start":{"column":70,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: OrderService should retrieve from localStorage if local copy does not exist"},{"id":"38","location":{"end":{"column":55,"line":16},"start":{"column":41,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: OrderService should retrieve from localStorage if local copy does not exist"},{"id":"42","location":{"end":{"column":4,"line":31},"start":{"column":17,"line":29}},"mutatorName":"BlockStatement","replacement":"{}","status":"NoCoverage"},{"id":"40","location":{"end":{"column":4,"line":25},"start":{"column":52,"line":22}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"41","location":{"end":{"column":40,"line":24},"start":{"column":26,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import { Inject, Injectable } from '@angular/core';\n\nimport { Drink } from '../domain/drink';\nimport { storageToken } from './storage.token';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderService {\n  // tslint:disable-next-line: variable-name\n  _currentOrder: readonly Drink[] | null = null;\n\n  get currentOrder(): readonly Drink[] | null {\n    if (!this._currentOrder && this.storage.getItem('currentOrder')) {\n      this._currentOrder =\n        JSON.parse(this.storage.getItem('currentOrder') ?? '') ?? null;\n    }\n\n    return this._currentOrder;\n  }\n\n  set currentOrder(value: readonly Drink[] | null) {\n    this._currentOrder = value;\n    this.storage.setItem('currentOrder', JSON.stringify(value));\n  }\n\n  constructor(@Inject(storageToken) private storage: Storage) {}\n\n  clear(): void {\n    this.currentOrder = null;\n  }\n}\n"},"C:\\projects\\GitHub\\LayZeeDK\\ngx-stryker-robobar\\src\\app\\data-access\\storage.token.ts":{"language":"typescript","mutants":[{"id":"44","location":{"end":{"column":2,"line":6},"start":{"column":59,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"CompileError","description":"Error message: src/app/data-access/storage.token.ts(3,59): error TS2345: Argument of type '{}' is not assignable to parameter of type '{ providedIn?: Type<any> | \"root\" | \"platform\" | \"any\" | null | undefined; factory: () => unknown; }'.\r\n  Property 'factory' is missing in type '{}' but required in type '{ providedIn?: Type<any> | \"root\" | \"platform\" | \"any\" | null | undefined; factory: () => unknown; }'.\r\n"},{"id":"43","location":{"end":{"column":57,"line":3},"start":{"column":48,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"46","location":{"end":{"column":21,"line":5},"start":{"column":15,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"CompileError","description":"Error message: src/app/data-access/storage.token.ts(5,3): error TS2322: Type '\"\"' is not assignable to type 'Type<any> | \"root\" | \"platform\" | \"any\" | null | undefined'.\r\n"},{"id":"45","location":{"end":{"column":39,"line":4},"start":{"column":12,"line":4}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed","description":"Killed by: OrderService should retrieve given order"}],"source":"import { InjectionToken } from '@angular/core';\n\nexport const storageToken = new InjectionToken('Storage', {\n  factory: (): Storage => localStorage,\n  providedIn: 'root',\n});\n"},"C:\\projects\\GitHub\\LayZeeDK\\ngx-stryker-robobar\\src\\app\\place-order\\place-order.component.ts":{"language":"typescript","mutants":[{"id":"47","location":{"end":{"column":32,"line":14},"start":{"column":30,"line":14}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"CompileError","description":"Error message: src/app/place-order/place-order.component.ts(14,31): error TS2322: Type 'string' is not assignable to type 'Drink'.\r\n"},{"id":"48","location":{"end":{"column":4,"line":18},"start":{"column":34,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"CompileError","description":"Error message: src/app/place-order/place-order.component.ts(16,7): error TS2378: A 'get' accessor must return a value.\r\nsrc/app/place-order/place-order.component.ts(16,26): error TS2355: A function whose declared type is neither 'void' nor 'any' must return a value.\r\n"},{"id":"49","location":{"end":{"column":54,"line":17},"start":{"column":29,"line":17}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"50","location":{"end":{"column":54,"line":17},"start":{"column":38,"line":17}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed","description":"Killed by: PlaceOrderComponent should not disable submit button if there are no drinks selected yet"},{"id":"51","location":{"end":{"column":54,"line":17},"start":{"column":38,"line":17}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"54","location":{"end":{"column":4,"line":25},"start":{"column":28,"line":20}},"mutatorName":"BlockStatement","replacement":"{}","status":"CompileError","description":"Error message: src/app/place-order/place-order.component.ts(20,7): error TS2378: A 'get' accessor must return a value.\r\nsrc/app/place-order/place-order.component.ts(20,21): error TS2355: A function whose declared type is neither 'void' nor 'any' must return a value.\r\n"},{"id":"55","location":{"end":{"column":59,"line":22},"start":{"column":7,"line":22}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"CompileError","description":"Error message: src/app/place-order/place-order.component.ts(21,5): error TS2322: Type 'number | undefined' is not assignable to type 'number'.\r\n  Type 'undefined' is not assignable to type 'number'.\r\n"},{"id":"52","location":{"end":{"column":54,"line":17},"start":{"column":38,"line":17}},"mutatorName":"EqualityOperator","replacement":"drink.amount >= 0","status":"Killed","description":"Killed by: PlaceOrderComponent should not disable submit button if there are no drinks selected yet"},{"id":"53","location":{"end":{"column":54,"line":17},"start":{"column":38,"line":17}},"mutatorName":"EqualityOperator","replacement":"drink.amount <= 0","status":"Killed","description":"Killed by: PlaceOrderComponent should not disable submit button if there are no drinks selected yet"},{"id":"56","location":{"end":{"column":59,"line":22},"start":{"column":25,"line":22}},"mutatorName":"ArithmeticOperator","replacement":"total - drink.amount * drink.price","status":"Killed","description":"Killed by: PlaceOrderComponent should calculate the total price"},{"id":"57","location":{"end":{"column":59,"line":22},"start":{"column":33,"line":22}},"mutatorName":"ArithmeticOperator","replacement":"drink.amount / drink.price","status":"Killed","description":"Killed by: PlaceOrderComponent should calculate the total price"},{"id":"58","location":{"end":{"column":4,"line":35},"start":{"column":20,"line":33}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: PlaceOrderComponent should have 3 drinks"},{"id":"59","location":{"end":{"column":4,"line":43},"start":{"column":35,"line":37}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: PlaceOrderComponent should decrement the drink amount on decrement"},{"id":"60","location":{"end":{"column":25,"line":40},"start":{"column":9,"line":40}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed","description":"Killed by: PlaceOrderComponent should decrement the drink amount on decrement"},{"id":"61","location":{"end":{"column":25,"line":40},"start":{"column":9,"line":40}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed","description":"Killed by: PlaceOrderComponent should not go below 0 on decrement"},{"id":"62","location":{"end":{"column":25,"line":40},"start":{"column":9,"line":40}},"mutatorName":"EqualityOperator","replacement":"drink.amount <= 0","status":"Survived"},{"id":"63","location":{"end":{"column":25,"line":40},"start":{"column":9,"line":40}},"mutatorName":"EqualityOperator","replacement":"drink.amount >= 0","status":"Killed","description":"Killed by: PlaceOrderComponent should decrement the drink amount on decrement"},{"id":"64","location":{"end":{"column":6,"line":42},"start":{"column":27,"line":40}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: PlaceOrderComponent should not go below 0 on decrement"},{"id":"65","location":{"end":{"column":4,"line":47},"start":{"column":35,"line":45}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: PlaceOrderComponent should increment the drink amount on increment"},{"id":"66","location":{"end":{"column":4,"line":52},"start":{"column":35,"line":49}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: PlaceOrderComponent should navigate to next page on submit"},{"id":"67","location":{"end":{"column":78,"line":50},"start":{"column":57,"line":50}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"68","location":{"end":{"column":46,"line":51},"start":{"column":37,"line":51}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: PlaceOrderComponent should navigate to next page on submit"}],"source":"import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { DrinkService } from '../data-access/drink.service';\nimport { OrderService } from '../data-access/order.service';\nimport { Drink } from '../domain/drink';\n\n@Component({\n  selector: 'robo-place-order',\n  templateUrl: './place-order.component.html',\n  styleUrls: ['./place-order.component.css'],\n})\nexport class PlaceOrderComponent implements OnInit {\n  drinks: readonly Drink[] = [];\n\n  get isSubmitEnabled(): boolean {\n    return this.drinks.some(drink => drink.amount > 0);\n  }\n\n  get totalPrice(): number {\n    return this.drinks.reduce(\n      (total, drink) => total + drink.amount * drink.price,\n      0,\n    );\n  }\n\n  constructor(\n    private orderService: OrderService,\n    private drinkService: DrinkService,\n    private router: Router,\n  ) {}\n\n  ngOnInit(): void {\n    this.drinks = this.drinkService.getDrinks();\n  }\n\n  onDecrement(drink: Drink): void {\n    drink.amount -= 1;\n\n    if (drink.amount < 0) {\n      drink.amount = 0;\n    }\n  }\n\n  onIncrement(drink: Drink): void {\n    drink.amount += 1;\n  }\n\n  async onSubmit(): Promise<void> {\n    this.orderService.currentOrder = this.drinks.filter(drink => drink.amount);\n    await this.router.navigateByUrl('/review');\n  }\n}\n"},"C:\\projects\\GitHub\\LayZeeDK\\ngx-stryker-robobar\\src\\app\\place-order\\place-order.module.ts":{"language":"typescript","mutants":[{"id":"69","location":{"end":{"column":2,"line":14},"start":{"column":24,"line":8}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"70","location":{"end":{"column":4,"line":13},"start":{"column":3,"line":9}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: PlaceOrderComponent should have 3 drinks"},{"id":"71","location":{"end":{"column":13,"line":10},"start":{"column":11,"line":10}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"72","location":{"end":{"column":22,"line":11},"start":{"column":16,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: PlaceOrderComponent should have 3 drinks"}],"source":"import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { PlaceOrderComponent } from './place-order.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: PlaceOrderComponent,\n  },\n];\n\n@NgModule({\n  declarations: [PlaceOrderComponent],\n  imports: [RouterModule.forChild(routes), CommonModule, FormsModule],\n})\nexport class PlaceOrderModule {}\n"},"C:\\projects\\GitHub\\LayZeeDK\\ngx-stryker-robobar\\src\\app\\review-order\\review-order.component.ts":{"language":"typescript","mutants":[{"id":"74","location":{"end":{"column":31,"line":18},"start":{"column":29,"line":18}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"CompileError","description":"Error message: src/app/review-order/review-order.component.ts(18,30): error TS2322: Type 'string' is not assignable to type 'Drink'.\r\n"},{"id":"73","location":{"end":{"column":25,"line":16},"start":{"column":20,"line":16}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"75","location":{"end":{"column":4,"line":33},"start":{"column":35,"line":22}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: ReviewOrderComponent OnInit should set order, numberOfDrinks and ageCheck properties"},{"id":"81","location":{"end":{"column":54,"line":27},"start":{"column":52,"line":27}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"CompileError","description":"Error message: src/app/review-order/review-order.component.ts(27,5): error TS2322: Type 'string[] | readonly Drink[]' is not assignable to type 'readonly Drink[]'.\r\n  Type 'string[]' is not assignable to type 'readonly Drink[]'.\r\n    Type 'string' is not assignable to type 'Drink'.\r\n"},{"id":"76","location":{"end":{"column":40,"line":23},"start":{"column":9,"line":23}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed","description":"Killed by: ReviewOrderComponent OnInit should set order, numberOfDrinks and ageCheck properties"},{"id":"82","location":{"end":{"column":63,"line":29},"start":{"column":7,"line":29}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"CompileError","description":"Error message: src/app/review-order/review-order.component.ts(28,5): error TS2322: Type 'number | undefined' is not assignable to type 'number'.\r\n  Type 'undefined' is not assignable to type 'number'.\r\n"},{"id":"77","location":{"end":{"column":40,"line":23},"start":{"column":9,"line":23}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed","description":"Killed by: ReviewOrderComponent OnInit should navigate back if there is no order"},{"id":"78","location":{"end":{"column":40,"line":23},"start":{"column":9,"line":23}},"mutatorName":"BooleanLiteral","replacement":"this.orderService.currentOrder","status":"Killed","description":"Killed by: ReviewOrderComponent OnInit should set order, numberOfDrinks and ageCheck properties"},{"id":"85","location":{"end":{"column":4,"line":45},"start":{"column":35,"line":35}},"mutatorName":"BlockStatement","replacement":"{}","status":"NoCoverage"},{"id":"79","location":{"end":{"column":6,"line":25},"start":{"column":42,"line":23}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: ReviewOrderComponent OnInit should navigate back if there is no order"},{"id":"86","location":{"end":{"column":57,"line":38},"start":{"column":7,"line":37}},"mutatorName":"ConditionalExpression","replacement":"true","status":"NoCoverage"},{"id":"80","location":{"end":{"column":42,"line":24},"start":{"column":39,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: ReviewOrderComponent OnInit should navigate back if there is no order"},{"id":"87","location":{"end":{"column":57,"line":38},"start":{"column":7,"line":37}},"mutatorName":"ConditionalExpression","replacement":"false","status":"NoCoverage"},{"id":"83","location":{"end":{"column":63,"line":29},"start":{"column":34,"line":29}},"mutatorName":"ArithmeticOperator","replacement":"numberOfDrinks - drink.amount","status":"Survived"},{"id":"88","location":{"end":{"column":57,"line":38},"start":{"column":7,"line":37}},"mutatorName":"LogicalOperator","replacement":"!this.shouldCheckAge && this.isAllowedToBuyAlcohol({\n  age: this.age ?? 0\n})","status":"NoCoverage"},{"id":"84","location":{"end":{"column":69,"line":32},"start":{"column":43,"line":32}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"89","location":{"end":{"column":27,"line":37},"start":{"column":7,"line":37}},"mutatorName":"BooleanLiteral","replacement":"this.shouldCheckAge","status":"NoCoverage"},{"id":"90","location":{"end":{"column":56,"line":38},"start":{"column":34,"line":38}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"CompileError","description":"Error message: src/app/review-order/review-order.component.ts(38,34): error TS2345: Argument of type '{}' is not assignable to parameter of type 'Customer'.\r\n  Property 'age' is missing in type '{}' but required in type 'Customer'.\r\n"},{"id":"91","location":{"end":{"column":6,"line":42},"start":{"column":7,"line":39}},"mutatorName":"BlockStatement","replacement":"{}","status":"NoCoverage"},{"id":"92","location":{"end":{"column":49,"line":41},"start":{"column":39,"line":41}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"93","location":{"end":{"column":6,"line":44},"start":{"column":12,"line":42}},"mutatorName":"BlockStatement","replacement":"{}","status":"NoCoverage"},{"id":"94","location":{"end":{"column":50,"line":43},"start":{"column":20,"line":43}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"95","location":{"end":{"column":4,"line":50},"start":{"column":35,"line":47}},"mutatorName":"BlockStatement","replacement":"{}","status":"NoCoverage"},{"id":"96","location":{"end":{"column":40,"line":49},"start":{"column":37,"line":49}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"97","location":{"end":{"column":4,"line":54},"start":{"column":62,"line":52}},"mutatorName":"BlockStatement","replacement":"{}","status":"CompileError","description":"Error message: src/app/review-order/review-order.component.ts(52,54): error TS2355: A function whose declared type is neither 'void' nor 'any' must return a value.\r\n"},{"id":"98","location":{"end":{"column":29,"line":53},"start":{"column":12,"line":53}},"mutatorName":"ConditionalExpression","replacement":"true","status":"NoCoverage"},{"id":"99","location":{"end":{"column":29,"line":53},"start":{"column":12,"line":53}},"mutatorName":"ConditionalExpression","replacement":"false","status":"NoCoverage"},{"id":"100","location":{"end":{"column":29,"line":53},"start":{"column":12,"line":53}},"mutatorName":"EqualityOperator","replacement":"customer.age >= 18","status":"NoCoverage"},{"id":"101","location":{"end":{"column":29,"line":53},"start":{"column":12,"line":53}},"mutatorName":"EqualityOperator","replacement":"customer.age <= 18","status":"NoCoverage"}],"source":"import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { OrderService } from '../data-access/order.service';\nimport { Customer } from '../domain/customer';\nimport { Drink } from '../domain/drink';\n\n@Component({\n  selector: 'robo-review-order',\n  styleUrls: ['./review-order.component.css'],\n  templateUrl: './review-order.component.html',\n})\nexport class ReviewOrderComponent implements OnInit {\n  age?: number;\n  error: string | null = null;\n  shouldCheckAge = false;\n  numberOfDrinks = 0;\n  order: readonly Drink[] = [];\n\n  constructor(private orderService: OrderService, private router: Router) {}\n\n  async ngOnInit(): Promise<void> {\n    if (!this.orderService.currentOrder) {\n      await this.router.navigateByUrl('/');\n    }\n\n    this.order = this.orderService.currentOrder ?? [];\n    this.numberOfDrinks = this.order.reduce(\n      (numberOfDrinks, drink) => numberOfDrinks + drink.amount,\n      0,\n    );\n    this.shouldCheckAge = this.order.some(drink => drink.isAlcoholic);\n  }\n\n  async onSubmit(): Promise<void> {\n    if (\n      !this.shouldCheckAge ||\n      this.isAllowedToBuyAlcohol({ age: this.age ?? 0 })\n    ) {\n      this.error = null;\n      await this.router.navigateByUrl('/success');\n    } else {\n      this.error = 'Only adults can buy alcohol!';\n    }\n  }\n\n  async onCancel(): Promise<void> {\n    this.orderService.clear();\n    await this.router.navigateByUrl('/');\n  }\n\n  private isAllowedToBuyAlcohol(customer: Customer): boolean {\n    return customer.age > 18;\n  }\n}\n"},"C:\\projects\\GitHub\\LayZeeDK\\ngx-stryker-robobar\\src\\app\\review-order\\review-order.module.ts":{"language":"typescript","mutants":[{"id":"102","location":{"end":{"column":71,"line":8},"start":{"column":24,"line":8}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"103","location":{"end":{"column":70,"line":8},"start":{"column":25,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: ReviewOrderComponent OnInit should set order, numberOfDrinks and ageCheck properties"},{"id":"104","location":{"end":{"column":35,"line":8},"start":{"column":33,"line":8}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"}],"source":"import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ReviewOrderComponent } from './review-order.component';\n\nconst routes: Routes = [{ path: '', component: ReviewOrderComponent }];\n\n@NgModule({\n  declarations: [ReviewOrderComponent],\n  imports: [RouterModule.forChild(routes), CommonModule, FormsModule],\n})\nexport class ReviewOrderModule {}\n"},"C:\\projects\\GitHub\\LayZeeDK\\ngx-stryker-robobar\\src\\app\\success\\success.component.ts":{"language":"typescript","mutants":[{"id":"106","location":{"end":{"column":64,"line":16},"start":{"column":62,"line":16}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"CompileError","description":"Error message: src/app/success/success.component.ts(16,84): error TS2349: This expression is not callable.\r\n  Each member of the union type '{ (callbackfn: (previousValue: string, currentValue: string, currentIndex: number, array: string[]) => string): string; (callbackfn: (previousValue: string, currentValue: string, currentIndex: number, array: string[]) => string, initialValue: string): string; <U>(callbackfn: (previousValue: U, currentValue: string, ...' has signatures, but none of those signatures are compatible with each other.\r\nsrc/app/success/success.component.ts(17,8): error TS7006: Parameter 'numberOfDrinks' implicitly has an 'any' type.\r\nsrc/app/success/success.component.ts(17,24): error TS7006: Parameter 'drink' implicitly has an 'any' type.\r\n"},{"id":"107","location":{"end":{"column":63,"line":17},"start":{"column":7,"line":17}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"CompileError","description":"Error message: src/app/success/success.component.ts(16,5): error TS2322: Type 'number | undefined' is not assignable to type 'number'.\r\n  Type 'undefined' is not assignable to type 'number'.\r\n"},{"id":"108","location":{"end":{"column":63,"line":17},"start":{"column":34,"line":17}},"mutatorName":"ArithmeticOperator","replacement":"numberOfDrinks - drink.amount","status":"NoCoverage"},{"id":"105","location":{"end":{"column":4,"line":20},"start":{"column":20,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { Component, OnInit } from '@angular/core';\n\nimport { OrderService } from '../data-access/order.service';\n\n@Component({\n  selector: 'robo-success',\n  templateUrl: './success.component.html',\n  styleUrls: ['./success.component.css'],\n})\nexport class SuccessComponent implements OnInit {\n  numberOfDrinks = 0;\n\n  constructor(private orderService: OrderService) {}\n\n  ngOnInit(): void {\n    this.numberOfDrinks = (this.orderService.currentOrder ?? []).reduce(\n      (numberOfDrinks, drink) => numberOfDrinks + drink.amount,\n      0,\n    );\n  }\n}\n"},"C:\\projects\\GitHub\\LayZeeDK\\ngx-stryker-robobar\\src\\app\\success\\success.module.ts":{"language":"typescript","mutants":[{"id":"109","location":{"end":{"column":67,"line":7},"start":{"column":24,"line":7}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"110","location":{"end":{"column":66,"line":7},"start":{"column":25,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: SuccessComponent should be constructed"},{"id":"111","location":{"end":{"column":35,"line":7},"start":{"column":33,"line":7}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"}],"source":"import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { SuccessComponent } from './success.component';\n\nconst routes: Routes = [{ path: '', component: SuccessComponent }];\n\n@NgModule({\n  declarations: [SuccessComponent],\n  imports: [RouterModule.forChild(routes), CommonModule],\n})\nexport class SuccessModule {}\n"},"C:\\projects\\GitHub\\LayZeeDK\\ngx-stryker-robobar\\src\\main.ts":{"language":"typescript","mutants":[{"id":"112","location":{"end":{"column":27,"line":7},"start":{"column":5,"line":7}},"mutatorName":"ConditionalExpression","replacement":"true","status":"NoCoverage"},{"id":"113","location":{"end":{"column":27,"line":7},"start":{"column":5,"line":7}},"mutatorName":"ConditionalExpression","replacement":"false","status":"NoCoverage"},{"id":"114","location":{"end":{"column":2,"line":9},"start":{"column":29,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"NoCoverage"},{"id":"115","location":{"end":{"column":35,"line":12},"start":{"column":10,"line":12}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"NoCoverage"}],"source":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"}},"schemaVersion":"1.0","thresholds":{"high":80,"low":60,"break":null}};